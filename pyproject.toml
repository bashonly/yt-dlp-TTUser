[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "yt-dlp-TTUser"
description = "A yt-dlp extractor plugin for downloading all videos posted by a TikTok user"
authors = [{name = "bashonly", email = "bashonly@protonmail.com"}]
version = "2024.03.18"
requires-python = ">=3.8"
readme = "README.md"
license = {file = "LICENSE"}

[tool.hatch.build.targets.wheel]
packages = ["yt_dlp_plugins"]

[tool.hatch.envs.default]
dependencies = [
    "autopep8>=2.0",
    "ruff>=0.2",
]
path = ".venv"

[tool.hatch.envs.default.scripts]
fix = [
    "format",
    "lint",
]
lint = "ruff check --fix {args:.}"
format = "autopep8 --in-place {args:.}"
check = [
    "ruff check {args:.}",
    "autopep8 --diff {args:.}",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
ignore = [
    "E402",  # module level import not at top of file
    "E501",  # line too long
    "E731",  # do not assign a lambda expression, use a def
    "E741",  # ambiguous variable name
]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # import order
]

[tool.ruff.lint.isort]
relative-imports-order = "closest-to-furthest"

[tool.autopep8]
max_line_length = 120
recursive = true
exit-code = true
jobs = 0
select = [
    "E101",
    "E112",
    "E113",
    "E115",
    "E116",
    "E117",
    "E121",
    "E122",
    "E123",
    "E124",
    "E125",
    "E126",
    "E127",
    "E128",
    "E129",
    "E131",
    "E201",
    "E202",
    "E203",
    "E211",
    "E221",
    "E222",
    "E223",
    "E224",
    "E225",
    "E226",
    "E227",
    "E228",
    "E231",
    "E241",
    "E242",
    "E251",
    "E252",
    "E261",
    "E262",
    "E265",
    "E266",
    "E271",
    "E272",
    "E273",
    "E274",
    "E275",
    "E301",
    "E302",
    "E303",
    "E304",
    "E305",
    "E306",
    "E502",
    "E701",
    "E702",
    "E704",
    "W391",
    "W504",
]
